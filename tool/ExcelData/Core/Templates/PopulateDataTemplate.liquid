//<auto-generated/>

#nullable enable
#pragma warning disable

using System;
using System.Linq;
using System.Data;
using System.Data.Common;
using System.Threading.Tasks;

using Microsoft.Data.SqlClient;

namespace {{model.namespace}}
{
    public enum DataFlavors
    {
{% for flavor in model.flavors -%}
        {{flavor.name}},
{% endfor -%}
    }

    public partial class TestDataHelper
    {
        public async Task PopulateData(string connectionString, params DataFlavors[] flavors)
        {
            if (connectionString is null)
                throw new ArgumentNullException(nameof(connectionString));
            if (connectionString.Trim().Length == 0)
                throw new ArgumentException("Connection string cannot be empty or whitespace.", nameof(connectionString));

            if (flavors is null)
                throw new ArgumentNullException(nameof(flavors));
            if (flavors.Length == 0)
                throw new ArgumentException("Specify at least one data flavor to use.", nameof(flavors));

            await using SqlConnection connection = new(connectionString);
            await connection.OpenAsync().ConfigureAwait(false);

            BeforeInsertData(connection);

            foreach (DataFlavors flavor in flavors)
            {
                switch (flavor)
                {
{% for flavor in model.flavors -%}
                    case DataFlavors.{{flavor.name}}:
                        await {{flavor.name}}Data.Populate(connection).ConfigureAwait(false);
                        break;
{% endfor -%}
                }
            }

            AfterInsertData(connection);

            await connection.CloseAsync().ConfigureAwait(false);
        }

        partial void BeforeInsertData(SqlConnection sqlConnection);

        partial void AfterInsertData(SqlConnection sqlConnection);
    }

