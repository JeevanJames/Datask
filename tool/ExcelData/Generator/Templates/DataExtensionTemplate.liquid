//<auto-generated/>
#nullable enable
using System;
using System.Threading.Tasks;

namespace {{d.namespace}}
{
    public enum DataFlavors
    {
{% for dataFlavour in d.data_flavours -%}
        {{ dataFlavour }},
{% endfor -%}
    }

    public static class {{d.class_name}}
    {
        public static async Task PopulateData(this {{d.context_name}} context, params DataFlavors[] flavors)
        {
            if (context is null)
                throw new ArgumentNullException(nameof(context));

            if (flavors is null)
                throw new ArgumentNullException(nameof(flavors));

            foreach (DataFlavors flavor in flavors)
            {
                switch (flavor)
                {
{% for flavour in d.data_flavours -%}
                    case DataFlavors.{{flavour}}:
                        await Populate{{flavour}}Data(context).ConfigureAwait(false);
                        break;

{% endfor -%}
                }
            }
        }

{% for flavour in d.data_flavours -%}
        private static async Task Populate{{flavour}}Data({{d.context_name}} context)
        {
{% for tableData in d.table_data -%}
{%      for tableColumn1 in tableData.table_columns limit:1 -%}
{%          for row1 in tableColumn1.column_rows -%}
            {% assign row_index = forloop:index0 %}
            context.{{tableData.name}}.Add(new {{tableData.name}}
            {
{%              for tableColumn in tableData.table_columns -%}
{%              assign row_index_value = tableColumn.column_rows[row_index] -%}
{%                  if tableColumn.type == "String" and  row_index_value != "null" -%}
                {{tableColumn.name}} = "{{row_index_value}}",
{%                  elsif tableColumn.type == "DateTime" and  row_index_value != "null" -%}
                {{tableColumn.name}} = "{{DateTime.Parse("row_index_value");}}",
{%                  elsif tableColumn.type == "DateTimeOffset" and  row_index_value != "null" -%}
                {{tableColumn.name}} = "{{DateTimeOffset.Parse("row_index_value");}}",
{%                  elsif tableColumn.type == "Decimal" and  row_index_value != "null" -%}
                {{tableColumn.name}} = "{{Convert.ToDecimal(row_index_value);}}",
{%                  elsif tableColumn.type == "Float" and  row_index_value != "null" -%}
                {{tableColumn.name}} = "{{Convert.ToDouble(row_index_value);}}",
{%                  elsif tableColumn.type == "Guid" and  row_index_value != "null" -%}
                {{tableColumn.name}} = "{{new Guid("row_index_value");}}",
{%                  elsif tableColumn.type == "Byte" and  row_index_value != "null" -%}
                {{tableColumn.name}} = "{{Convert.ToByte(row_index_value);}}",
{%                  else -%}
                {{tableColumn.name}} = {{row_index_value}},
{%                  endif -%}
{%              endfor -%}
            });
{%          endfor -%}
{%      endfor -%}
{% endfor -%}
            await context.SaveChangesAsync();
        }

{% endfor -%}
    }
}
